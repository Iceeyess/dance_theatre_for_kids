# Generated by Django 5.1.4 on 2024-12-24 16:01

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(help_text='Введите страну', max_length=100, verbose_name='страна')),
                ('post_code', models.CharField(blank=True, help_text='Введите почтовый индекс', max_length=6, null=True, verbose_name='почтовый индекс')),
                ('district', models.CharField(blank=True, help_text='Введите область', max_length=150, null=True, verbose_name='область')),
                ('city', models.CharField(blank=True, help_text='Введите город', max_length=100, null=True, verbose_name='город')),
                ('street', models.CharField(blank=True, help_text='Введите улицу', max_length=150, null=True, verbose_name='улица')),
                ('house', models.CharField(blank=True, help_text='Введите дом', max_length=20, null=True, verbose_name='дом')),
                ('apartment', models.CharField(blank=True, help_text='Введите квартиру', max_length=20, null=True, verbose_name='квартира')),
            ],
            options={
                'verbose_name': 'адрес',
                'verbose_name_plural': 'адреса',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите название мероприятия', max_length=150, verbose_name='наименование мероприятия')),
            ],
            options={
                'verbose_name': 'мероприятие',
                'verbose_name_plural': 'мероприятия',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(help_text='Введите имя педагога', max_length=100, verbose_name='имя')),
                ('last_name', models.CharField(help_text='Введите фамилию педагога', max_length=100, verbose_name='фамилия')),
                ('middle_name', models.CharField(blank=True, help_text='Введите отчество педагога', max_length=100, null=True, verbose_name='отчество')),
                ('birthday', models.DateField(help_text='Введите дату рождения', verbose_name='дата рождения')),
                ('specialty', models.CharField(blank=True, help_text='Введите специальность', max_length=150, null=True, verbose_name='специальность')),
                ('biography', models.TextField(blank=True, help_text='Введите биографию', null=True, verbose_name='биография')),
            ],
            options={
                'verbose_name': 'педагог',
                'verbose_name_plural': 'педагоги',
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_time', models.DateTimeField(auto_now_add=True, help_text='Введите дату и время мероприятия', verbose_name='дата и время мероприятия')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='дата и время создания')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='дата и время обновления')),
                ('address', models.ManyToManyField(to='theatre.address', verbose_name='адрес мероприятия')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='theatre.event', verbose_name='наименование мероприятия')),
                ('teacher', models.ManyToManyField(to='theatre.teacher', verbose_name='педагог')),
            ],
            options={
                'verbose_name': 'расписание',
                'verbose_name_plural': 'расписания',
            },
        ),
    ]
